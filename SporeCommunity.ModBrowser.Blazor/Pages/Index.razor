@page "/"
@using GithubApi

<MainNavButtons />

<form @onsubmit="@ExecuteSearch">
	<input @bind="searchTerm" placeholder="Search for mods">
	<button type="submit">Search</button>
</form>

@if (errorMessage is not null)
{
	<p class="accent-orange">There was an error searching for mods.</p>
	<p class="accent-orange">For help, visit the Discord above, and provide all of the information below.</p>
	<SupportInformation />
	<p>@errorMessage</p>
}
else if (searchTerm.Length == 0 && mods.Count == 0)
{
	<p>No mods were found. Try using different search terms.</p>
}
else
{
	<p>Showing @mods.Count mods</p>
	@foreach (var mod in mods)
	{
		<ModListingComponent Mod="@mod" />
	}
}
@if (isLoading)
{
	<LoadingSpinner />
}

@code {
	private bool isLoading = true;

	private string? errorMessage;

	private GithubModSearchEngine github = new("Spore-Community/ModBrowser");

	private string searchTerm = "";

	private List<ModListing> mods = new();

	protected override async Task OnInitializedAsync()
	{
		await ExecuteSearch();
	}

	private async Task ExecuteSearch()
	{
		isLoading = true;
		mods.Clear();
		try
		{
			await foreach (var mod in github.SearchModsAsync(searchTerm))
			{
				mods.Add(mod);

				// When listing all mods, sort by download count
				if (searchTerm.Length == 0)
				{
					mods = mods.OrderByDescending(mod => mod.DownloadCount).ToList();
				}

				// Refresh UI
				StateHasChanged();
			}
		}
		catch (Exception e)
		{
			errorMessage = e.Message;
			Console.WriteLine("Spore Mod Browser encountered an error searching for mods. If requested, please provide the information below.");
			Console.WriteLine(e.ToString());
		}
		isLoading = false;
	}
}